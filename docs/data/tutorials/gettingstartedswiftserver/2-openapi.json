{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/gettingstartedswiftserver\/2-openapi"]}],"sections":[{"estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to add an OpenAPI document, generate server stubs using the OpenAPI plugin, and integrate the generated code into the app."}]}],"kind":"hero","chapter":"Build a basic Vapor app","title":"Specify routes using OpenAPI"},{"tasks":[{"title":"Add an OpenAPI document","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new OpenAPI document to define the service’s HTTP API."}]}]}],"anchor":"Add-an-OpenAPI-document","stepsSection":[{"caption":[{"inlineContent":[{"type":"text","text":"Add the OpenAPI dependencies noted on the right."}],"type":"paragraph"}],"media":null,"code":"2-package.0.swift","type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Edit"}]},{"type":"text","text":" "},{"code":"Packages.swift","type":"codeVoice"}],"type":"paragraph"}]},{"caption":[{"inlineContent":[{"text":"In the ","type":"text"},{"type":"codeVoice","code":"Sources\/SwiftServerTodos"},{"text":" directory create a base OpenAPI document named ","type":"text"},{"type":"codeVoice","code":"openapi.yaml"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"The document should include a version, ","type":"text"},{"type":"codeVoice","code":"info"},{"text":" providing a high level summary of the API, and ","type":"text"},{"type":"codeVoice","code":"servers"},{"text":" that is used in generated documentation for the API as illustrated on the right.","type":"text"}],"type":"paragraph"}],"media":null,"code":"2-openapi.0.yaml","type":"step","runtimePreview":null,"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Create"}],"type":"strong"},{"type":"text","text":" "},{"type":"codeVoice","code":"openapi.yaml"}],"type":"paragraph"}]},{"caption":[{"inlineContent":[{"type":"text","text":"In the openapi.yaml add a schema for a TODO item, mapping to the model defined in "},{"type":"codeVoice","code":"Database.swift"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The schema "},{"type":"codeVoice","code":"TODODetail"},{"type":"text","text":" defines "},{"type":"codeVoice","code":"id"},{"type":"text","text":" and "},{"type":"codeVoice","code":"contents"},{"type":"text","text":" properties, both as Strings."},{"type":"text","text":" "},{"type":"text","text":"The additional "},{"type":"codeVoice","code":"format"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" property constrains OpenAPI to verify the string format matches a UUID."}],"type":"paragraph"}],"media":null,"code":"2-openapi.1.yaml","type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"text":" the first schema","type":"text"}]}]},{"caption":[{"inlineContent":[{"type":"text","text":"The schema "},{"type":"codeVoice","code":"PageOfTODOs"},{"type":"text","text":" defines a list of TODO items, referencing the schema for "},{"type":"codeVoice","code":"TODODetail"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null,"code":"2-openapi.2.yaml","type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Extend"}]},{"type":"text","text":" the schemas to support a list of TODOs"}],"type":"paragraph"}]},{"caption":[{"type":"paragraph","inlineContent":[{"text":"The schema ","type":"text"},{"type":"codeVoice","code":"CreateTODORequest"},{"text":" defines ","type":"text"},{"type":"codeVoice","code":"contents"},{"text":", but not an ","type":"text"},{"type":"codeVoice","code":"id"},{"text":", as the app creates that.","type":"text"}]}],"media":null,"code":"2-openapi.3.yaml","type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Extend","type":"text"}],"type":"strong"},{"type":"text","text":" the schemas to support creating a new "},{"code":"TODO","type":"codeVoice"},{"type":"text","text":" item."}]}]},{"caption":[{"inlineContent":[{"type":"text","text":"Add paths to include a "},{"type":"codeVoice","code":"\/todos"},{"type":"text","text":" get route to return a list of the TODOs."}],"type":"paragraph"}],"media":null,"code":"2-openapi.4.yaml","type":"step","runtimePreview":null,"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"strong"},{"text":" a route to return TODOs","type":"text"}],"type":"paragraph"}]},{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add to paths a "},{"type":"codeVoice","code":"\/todos"},{"type":"text","text":" post route to create a new TODO"}]}],"media":null,"code":"2-openapi.5.yaml","type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"strong"},{"text":" a route to create a new TODO.","type":"text"}]}]},{"caption":[{"type":"paragraph","inlineContent":[{"text":"The parameter for the route uses a reference to a component, which allows for re-use.","type":"text"}]}],"media":null,"code":"2-openapi.6.yaml","type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" routes to retrieve and to delete an individual TODO."}]}]},{"caption":[{"type":"paragraph","inlineContent":[{"text":"The TODO identifier will be used to determine which TOTO to retrieve or delete.","type":"text"}]}],"media":null,"code":"2-openapi.7.yaml","type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Define","type":"text"}],"type":"strong"},{"text":" the parameter for the TODO identifier.","type":"text"}]}]}]},{"title":"OpenAPI generator","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"text":"Configure and use the OpenAPI plugin to generate code from the OpenAPI document.","type":"text"}],"type":"paragraph"}],"kind":"contentAndMedia"}],"anchor":"OpenAPI-generator","stepsSection":[{"media":null,"code":"2-openapi-generator-config.0.yaml","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Create","type":"text"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"openapi-generator-config.yaml"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"This provides configuration for the generator to create both types from the schema and server stubs. ","type":"text"},{"type":"strong","inlineContent":[{"text":"Note:","type":"text"}]},{"text":" Create ","type":"text"},{"code":"openapi-generator-config.yaml","type":"codeVoice"},{"text":" alongside the OpenAPI document.","type":"text"}]}]},{"media":null,"code":"2-package.1.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"type":"text","text":" the OpenAPI generator plugin."}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the OpenAPI generator plugin to the plugins section as illistrated on the right."}]}]},{"media":null,"code":"2-bash.0.txt","runtimePreview":null,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Run","type":"text"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"swift build --product SwiftServerTodos"}],"type":"paragraph"}],"type":"step","caption":[{"inlineContent":[{"text":"Open a terminal, stop the running server with ctrl+C, and rebuild the project.  ","type":"text"},{"inlineContent":[{"type":"text","text":"Note:"}],"type":"strong"},{"text":" Remember to use the –product switch to speed up the build.","type":"text"}],"type":"paragraph"}]},{"media":null,"code":"2-bash.1.txt","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Review","type":"text"}],"type":"strong"},{"text":" the output from the build.","type":"text"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whenever you build your package, if the OpenAPI document or the config file has changed, the plugin regenerates the Swift code behind the scenes."}]}]},{"media":null,"code":"2-apihandler.0.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Create","type":"text"}]},{"text":" ","type":"text"},{"code":"APIHandler.swift","type":"codeVoice"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new file in "},{"type":"codeVoice","code":".\/Sources\/SwiftServerTodos\/"},{"type":"text","text":" to provide the implementation for the stubs."},{"type":"text","text":" "},{"type":"text","text":"Import the "},{"type":"codeVoice","code":"OpenAPIRuntime"},{"type":"text","text":" module."}]}]},{"media":null,"code":"2-apihandler.1.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Create"}]},{"type":"text","text":" an "},{"type":"codeVoice","code":"APIHandler"},{"type":"text","text":" struct"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"The struct must conform to ","type":"text"},{"code":"APIProtocol","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"code":"APIProtocol","type":"codeVoice"},{"text":" is a protocol generated from the OpenAPI document and defines the methods to implement the server.","type":"text"}]}]},{"media":null,"code":"2-apihandler.2.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"text":" a stub for the ","type":"text"},{"code":"listTODOs","type":"codeVoice"},{"text":" method.","type":"text"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You must provide an initial implementation for the method so it compiles with the intent to provide the implementation later, return a "},{"code":"500","type":"codeVoice"},{"type":"text","text":" error code."}]}]},{"media":null,"code":"2-apihandler.3.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"text":" a stub for the ","type":"text"},{"code":"createTODO","type":"codeVoice"},{"text":" method.","type":"text"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"You must also provide an initial implementation for the ","type":"text"},{"code":"createTODO","type":"codeVoice"},{"text":" method.","type":"text"}]}]},{"media":null,"code":"2-apihandler.4.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"getTODODetail"},{"type":"text","text":" method implementation"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"Provide an initial implementation for the ","type":"text"},{"type":"codeVoice","code":"getTODODetail"},{"text":" method.","type":"text"}]}]},{"media":null,"code":"2-apihandler.5.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"strong"},{"text":" ","type":"text"},{"code":"deleteTODO","type":"codeVoice"},{"text":" method implementation","type":"text"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"Provide an initial implementation for the ","type":"text"},{"code":"deleteTODO","type":"codeVoice"},{"text":" method.","type":"text"}]}]}]},{"title":"Configure Vapor to use the API handler","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now create an instance of the APIHandler and a Vapor transport. Use the "},{"type":"reference","isActive":true,"identifier":"https:\/\/swiftpackageindex.com\/apple\/swift-openapi-runtime\/documentation\/openapiruntime\/servertransport"},{"type":"text","text":" to register your implementation, enabling your app to use the transport for routes you implemented."}]}]}],"anchor":"Configure-Vapor-to-use-the-API-handler","stepsSection":[{"code":"1-serverservice.0.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Review"}],"type":"strong"},{"text":" the ","type":"text"},{"code":"ServerService.swift","type":"codeVoice"},{"text":" file.","type":"text"}],"type":"paragraph"}],"caption":[],"media":null},{"code":"1-serverservice.1.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Remove","type":"text"}],"type":"strong"},{"text":" the initial ","type":"text"},{"type":"codeVoice","code":"app.get(\"todos\")"},{"text":" route.","type":"text"}]}],"caption":[],"media":null},{"code":"2-serverservice.0.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"code":"OpenAPIVapor","type":"codeVoice"},{"text":" import","type":"text"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Edit the file "},{"type":"codeVoice","code":"ServerService.swift"},{"type":"text","text":" and import "},{"type":"codeVoice","code":"OpenAPIVapor"},{"type":"text","text":"."}]}],"media":null},{"code":"2-serverservice.1.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"inlineContent":[{"text":"Create","type":"text"}],"type":"strong"},{"text":" an instance of ","type":"text"},{"code":"APIHandler","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"Create an instance of the "},{"code":"APIHandler","type":"codeVoice"},{"type":"text","text":" struct"}],"type":"paragraph"}],"media":null},{"code":"2-serverservice.2.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Instantiate","type":"text"}]},{"text":" the transport and register the handler.","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"Add the code on the right to use the implementation you created."}],"type":"paragraph"}],"media":null}]}],"kind":"tasks"},{"abstract":[{"type":"text","text":"Use the Fluent ORM to connect a PostgreSQL database to the tutorial app."}],"featuredEyebrow":"Tutorial","action":{"identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database","type":"reference","isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"kind":"callToAction","title":"Integrate a database"}],"metadata":{"title":"Specify routes using OpenAPI","role":"project","category":"Get Started with Swift Server","categoryPathComponent":"getting-started-swift-server"},"kind":"project","hierarchy":{"modules":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/Before-you-begin","projects":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/0-setup","sections":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/0-setup#Verify-installed-tools","kind":"task"},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/0-setup#Clone-and-build-the-tutorial-repository","kind":"task"}]}]},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/Build-a-basic-Vapor-app","projects":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/1-introduction","sections":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/1-introduction#Explore-the-parts-of-a-basic-app","kind":"task"}]},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi","sections":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi#Add-an-OpenAPI-document","kind":"task"},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi#OpenAPI-generator","kind":"task"},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi#Configure-Vapor-to-use-the-API-handler","kind":"task"}]},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database","sections":[{"kind":"task","reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Set-up-the-infrastructure"},{"kind":"task","reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Configure-the-database-tables-and-connection"},{"kind":"task","reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Add-the-database-layer-to-the-routes"},{"kind":"task","reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Run-and-test-the-code"}]}]},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/Review-and-next-steps","projects":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup","sections":[{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup#Summary","kind":"heading"},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup#Review","kind":"heading"},{"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup#Where-do-I-go-from-here","kind":"heading"}]}]}],"reference":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server","paths":[["doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server","doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/$volume","doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/Build-a-basic-Vapor-app"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/0-setup#Verify-installed-tools":{"abstract":[{"type":"text","text":"Ensure you have the right tools and example code before learning how to write your Swift server application."}],"url":"\/tutorials\/gettingstartedswiftserver\/0-setup#Verify-installed-tools","type":"section","title":"Verify installed tools","kind":"section","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/0-setup#Verify-installed-tools","role":"pseudoSymbol"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/0-setup#Clone-and-build-the-tutorial-repository":{"type":"section","kind":"section","title":"Clone and build the tutorial repository","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/0-setup#Clone-and-build-the-tutorial-repository","url":"\/tutorials\/gettingstartedswiftserver\/0-setup#Clone-and-build-the-tutorial-repository","role":"pseudoSymbol","abstract":[{"text":"Ensure you have the right tools and example code before learning how to write your Swift server application.","type":"text"}]},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/2-openapi#Configure-Vapor-to-use-the-API-handler":{"type":"section","kind":"section","title":"Configure Vapor to use the API handler","abstract":[{"type":"text","text":"Learn how to add an OpenAPI document, generate server stubs using the OpenAPI plugin, and integrate the generated code into the app."}],"identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi#Configure-Vapor-to-use-the-API-handler","role":"pseudoSymbol","url":"\/tutorials\/gettingstartedswiftserver\/2-openapi#Configure-Vapor-to-use-the-API-handler"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/1-introduction":{"type":"topic","url":"\/tutorials\/gettingstartedswiftserver\/1-introduction","kind":"project","title":"Introduction","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/1-introduction","abstract":[{"text":"The tutorial example contains a Package.swift file that defines the dependencies and targets for the app, as well as a Sources directory with starter files. The finished tutorial is also provided in the Completed folder.","type":"text"}],"estimatedTime":"5min","role":"project"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/2-openapi#OpenAPI-generator":{"url":"\/tutorials\/gettingstartedswiftserver\/2-openapi#OpenAPI-generator","title":"OpenAPI generator","abstract":[{"type":"text","text":"Learn how to add an OpenAPI document, generate server stubs using the OpenAPI plugin, and integrate the generated code into the app."}],"kind":"section","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi#OpenAPI-generator","type":"section","role":"pseudoSymbol"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/3-database":{"kind":"project","abstract":[{"type":"text","text":"Use the Fluent ORM to connect a PostgreSQL database to the tutorial app."}],"role":"project","estimatedTime":"10min","type":"topic","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database","url":"\/tutorials\/gettingstartedswiftserver\/3-database","title":"Integrate a database"},"2-openapi.2.yaml":{"syntax":"yaml","type":"file","fileName":"openapi.yaml","highlights":[{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34}],"identifier":"2-openapi.2.yaml","fileType":"yaml","content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs","components:","  schemas:","    TODODetail:","      description: The details of a TODO.","      properties:","        id:","          description: A unique identifier of the TODO.","          type: string","          format: uuid","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - id","        - contents","    PageOfTODOs:","      description: A single page of TODOs.","      properties:","        items:","          type: array","          items:","            $ref: '#\/components\/schemas\/TODODetail'","      required:","        - items"]},"2-serverservice.0.swift":{"syntax":"swift","fileType":"swift","identifier":"2-serverservice.0.swift","fileName":"ServerService.swift","content":["import OpenAPIVapor","import ServiceLifecycle","import Vapor","","func configureServer(_ app: Application) async throws -> ServerService {","    app.middleware.use(RequestLoggerInjectionMiddleware())","","    \/\/ A health endpoint.","    app.get(\"health\") { _ in","        \"ok\\n\"","    }","","    return ServerService(app: app)","}","","struct ServerService: Service {","    var app: Application","    func run() async throws {","        try await app.execute()","    }","}"],"type":"file","highlights":[{"line":1}]},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/4-wrapup#Summary":{"kind":"section","abstract":[{"text":"Review what you built and where to find resources to build something you can ship to production.","type":"text"}],"title":"Summary","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup#Summary","url":"\/tutorials\/gettingstartedswiftserver\/4-wrapup#Summary"},"2-openapi.4.yaml":{"type":"file","identifier":"2-openapi.4.yaml","fileType":"yaml","syntax":"yaml","highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24}],"content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs","paths:","  \/todos:","    get:","      summary: Fetch a list of TODOs.","      operationId: listTODOs","      tags:","        - TODOs","      responses:","        '200':","          description: Returns the list of TODOs.","          content:","            application\/json:","              schema:","                $ref: '#\/components\/schemas\/PageOfTODOs'","components:","  schemas:","    TODODetail:","      description: The details of a TODO.","      properties:","        id:","          description: A unique identifier of the TODO.","          type: string","          format: uuid","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - id","        - contents","    PageOfTODOs:","      description: A single page of TODOs.","      properties:","        items:","          type: array","          items:","            $ref: '#\/components\/schemas\/TODODetail'","      required:","        - items","    CreateTODORequest:","      description: The metadata required to create a TODO.","      properties:","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - contents"],"fileName":"openapi.yaml"},"2-openapi.5.yaml":{"identifier":"2-openapi.5.yaml","syntax":"yaml","fileType":"yaml","content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs","paths:","  \/todos:","    get:","      summary: Fetch a list of TODOs.","      operationId: listTODOs","      tags:","        - TODOs","      responses:","        '200':","          description: Returns the list of TODOs.","          content:","            application\/json:","              schema:","                $ref: '#\/components\/schemas\/PageOfTODOs'","    post:","      summary: Create a new TODO.","      operationId: createTODO","      tags:","        - TODOs","      requestBody:","        required: true","        content:","          application\/json:","            schema:","              $ref: '#\/components\/schemas\/CreateTODORequest'","      responses:","        '201':","          description: The TODO was created successfully.","          content:","            application\/json:","              schema:","                $ref: '#\/components\/schemas\/TODODetail'","components:","  schemas:","    TODODetail:","      description: The details of a TODO.","      properties:","        id:","          description: A unique identifier of the TODO.","          type: string","          format: uuid","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - id","        - contents","    PageOfTODOs:","      description: A single page of TODOs.","      properties:","        items:","          type: array","          items:","            $ref: '#\/components\/schemas\/TODODetail'","      required:","        - items","    CreateTODORequest:","      description: The metadata required to create a TODO.","      properties:","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - contents"],"highlights":[{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42}],"type":"file","fileName":"openapi.yaml"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/1-introduction#Explore-the-parts-of-a-basic-app":{"kind":"section","url":"\/tutorials\/gettingstartedswiftserver\/1-introduction#Explore-the-parts-of-a-basic-app","type":"section","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/1-introduction#Explore-the-parts-of-a-basic-app","abstract":[{"text":"The tutorial example contains a Package.swift file that defines the dependencies and targets for the app, as well as a Sources directory with starter files. The finished tutorial is also provided in the Completed folder.","type":"text"}],"title":"Explore the parts of a basic app","role":"pseudoSymbol"},"doc://com.apple.ASE.getting-started/tutorials/getting-started-swift-server/Before-you-begin":{"abstract":[],"role":"article","type":"topic","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/Before-you-begin","url":"\/tutorials\/getting-started-swift-server\/before-you-begin","kind":"article","title":"Before you begin"},"2-serverservice.2.swift":{"highlights":[{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}],"content":["import OpenAPIVapor","import ServiceLifecycle","import Vapor","","func configureServer(_ app: Application) async throws -> ServerService {","    app.middleware.use(RequestLoggerInjectionMiddleware())","","    \/\/ A health endpoint.","    app.get(\"health\") { _ in","        \"ok\\n\"","    }","","    \/\/ Create app state.","    let handler = APIHandler()","","    \/\/ Register the generated handlers.","    let transport = VaporTransport(routesBuilder: app)","    try handler.registerHandlers(","        on: transport,","        serverURL: Servers.Server1.url()","    )","","    return ServerService(app: app)","}","","struct ServerService: Service {","    var app: Application","    func run() async throws {","        try await app.execute()","    }","}"],"identifier":"2-serverservice.2.swift","fileName":"ServerService.swift","fileType":"swift","syntax":"swift","type":"file"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/4-wrapup#Review":{"identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup#Review","kind":"section","abstract":[{"type":"text","text":"Review what you built and where to find resources to build something you can ship to production."}],"type":"section","role":"pseudoSymbol","title":"Review","url":"\/tutorials\/gettingstartedswiftserver\/4-wrapup#Review"},"2-apihandler.4.swift":{"fileType":"swift","syntax":"swift","content":["import Foundation","import OpenAPIRuntime","","struct APIHandler: APIProtocol {","    func listTODOs(","        _ input: Operations.ListTODOs.Input","    ) async throws -> Operations.ListTODOs.Output {","        .undocumented(statusCode: 500, .init())","    }","","    func createTODO(","        _ input: Operations.CreateTODO.Input","    ) async throws -> Operations.CreateTODO.Output {","        .undocumented(statusCode: 500, .init())","    }","","    func getTODODetail(","        _ input: Operations.GetTODODetail.Input","    ) async throws -> Operations.GetTODODetail.Output {","        .undocumented(statusCode: 500, .init())","    }","}"],"type":"file","identifier":"2-apihandler.4.swift","fileName":"APIHandler.swift","highlights":[{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21}]},"2-bash.0.txt":{"syntax":"","type":"file","fileName":"Terminal","content":["% swift build --product SwiftServerTodos"],"highlights":[],"fileType":"","identifier":"2-bash.0.txt"},"2-openapi.0.yaml":{"syntax":"yaml","type":"file","fileName":"openapi.yaml","content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs"],"highlights":[],"fileType":"yaml","identifier":"2-openapi.0.yaml"},"2-apihandler.0.swift":{"syntax":"swift","type":"file","fileName":"APIHandler.swift","content":["import Foundation","import OpenAPIRuntime"],"highlights":[],"fileType":"swift","identifier":"2-apihandler.0.swift"},"2-package.0.swift":{"highlights":[{"line":32},{"line":33}],"syntax":"swift","fileType":"swift","content":["\/\/ swift-tools-version: 6.1","","import PackageDescription","","let package = Package(","    name: \"swift-server-todos\",","    platforms: [","        .macOS(.v15)","    ],","    dependencies: [","        \/\/ Server scaffolding","        .package(url: \"https:\/\/github.com\/vapor\/vapor\", from: \"4.0.0\"),","        .package(url: \"https:\/\/github.com\/swift-server\/swift-service-lifecycle\", from: \"2.1.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-openapi-generator\", from: \"1.0.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-openapi-runtime\", from: \"1.0.0\"),","        .package(url: \"https:\/\/github.com\/swift-server\/swift-openapi-vapor\", from: \"1.0.0\"),","","        \/\/ Telemetry","        .package(url: \"https:\/\/github.com\/apple\/swift-log\", from: \"1.5.2\"),","","        \/\/ Database","        .package(url: \"https:\/\/github.com\/vapor\/fluent.git\", from: \"4.0.0\"),","        .package(url: \"https:\/\/github.com\/vapor\/fluent-postgres-driver.git\", from: \"2.0.0\"),","    ],","    targets: [","        .executableTarget(","            name: \"SwiftServerTodos\",","            dependencies: [","                \/\/ Server scaffolding","                .product(name: \"Vapor\", package: \"vapor\"),","                .product(name: \"ServiceLifecycle\", package: \"swift-service-lifecycle\"),","                .product(name: \"OpenAPIRuntime\", package: \"swift-openapi-runtime\"),","                .product(name: \"OpenAPIVapor\", package: \"swift-openapi-vapor\"),","","                \/\/ Telemetry","                .product(name: \"Logging\", package: \"swift-log\"),","            ]","        )","    ]",")"],"fileName":"Package.swift","type":"file","identifier":"2-package.0.swift"},"https://swiftpackageindex.com/apple/swift-openapi-runtime/documentation/openapiruntime/servertransport":{"type":"link","identifier":"https:\/\/swiftpackageindex.com\/apple\/swift-openapi-runtime\/documentation\/openapiruntime\/servertransport","title":"transport","titleInlineContent":[{"type":"text","text":"transport"}],"url":"https:\/\/swiftpackageindex.com\/apple\/swift-openapi-runtime\/documentation\/openapiruntime\/servertransport"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/0-setup":{"kind":"project","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/0-setup","abstract":[{"type":"text","text":"Ensure you have the right tools and example code before learning how to write your Swift server application."}],"type":"topic","role":"project","estimatedTime":"5min","url":"\/tutorials\/gettingstartedswiftserver\/0-setup","title":"Set up your development environment"},"2-apihandler.1.swift":{"identifier":"2-apihandler.1.swift","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6}],"content":["import Foundation","import OpenAPIRuntime","","struct APIHandler: APIProtocol {","    ","}"],"fileName":"APIHandler.swift","type":"file","syntax":"swift"},"2-openapi.3.yaml":{"fileName":"openapi.yaml","fileType":"yaml","syntax":"yaml","identifier":"2-openapi.3.yaml","content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs","components:","  schemas:","    TODODetail:","      description: The details of a TODO.","      properties:","        id:","          description: A unique identifier of the TODO.","          type: string","          format: uuid","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - id","        - contents","    PageOfTODOs:","      description: A single page of TODOs.","      properties:","        items:","          type: array","          items:","            $ref: '#\/components\/schemas\/TODODetail'","      required:","        - items","    CreateTODORequest:","      description: The metadata required to create a TODO.","      properties:","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - contents"],"type":"file","highlights":[{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42}]},"2-apihandler.2.swift":{"syntax":"swift","identifier":"2-apihandler.2.swift","fileType":"swift","content":["import Foundation","import OpenAPIRuntime","","struct APIHandler: APIProtocol {","    func listTODOs(","        _ input: Operations.ListTODOs.Input","    ) async throws -> Operations.ListTODOs.Output {","        .undocumented(statusCode: 500, .init())","    }","    ","}"],"type":"file","highlights":[{"line":5},{"line":6},{"line":7},{"line":8},{"line":9}],"fileName":"APIHandler.swift"},"2-serverservice.1.swift":{"fileType":"swift","fileName":"ServerService.swift","highlights":[{"line":13},{"line":14},{"line":15}],"identifier":"2-serverservice.1.swift","syntax":"swift","content":["import OpenAPIVapor","import ServiceLifecycle","import Vapor","","func configureServer(_ app: Application) async throws -> ServerService {","    app.middleware.use(RequestLoggerInjectionMiddleware())","","    \/\/ A health endpoint.","    app.get(\"health\") { _ in","        \"ok\\n\"","    }","","    \/\/ Create app state.","    let handler = APIHandler()","","    return ServerService(app: app)","}","","struct ServerService: Service {","    var app: Application","    func run() async throws {","        try await app.execute()","    }","}"],"type":"file"},"doc://com.apple.ASE.getting-started/tutorials/getting-started-swift-server":{"role":"overview","title":"Explore Swift on the server by building a Vapor app","type":"topic","kind":"overview","abstract":[{"type":"text","text":"Learn about cloud services in Swift by building and extending a Vapor app."}],"identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server","url":"\/tutorials\/getting-started-swift-server"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/4-wrapup#Where-do-I-go-from-here":{"title":"Where do I go from here?","abstract":[{"type":"text","text":"Review what you built and where to find resources to build something you can ship to production."}],"type":"section","url":"\/tutorials\/gettingstartedswiftserver\/4-wrapup#Where-do-I-go-from-here","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup#Where-do-I-go-from-here"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/3-database#Run-and-test-the-code":{"identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Run-and-test-the-code","kind":"section","role":"pseudoSymbol","title":"Run and test the code","url":"\/tutorials\/gettingstartedswiftserver\/3-database#Run-and-test-the-code","abstract":[{"text":"Use the Fluent ORM to connect a PostgreSQL database to the tutorial app.","type":"text"}],"type":"section"},"2-bash.1.txt":{"type":"file","content":["% swift build --product SwiftServerTodos","Building for debugging...","Swift OpenAPI Generator is running with the following configuration:","- OpenAPI document path: ...","- Configuration path: ...","- Generator modes: types, server","- Access modifier: internal","- Naming strategy: idiomatic","- Name overrides: <none>","- Feature flags: <none>","- Output file names: Types.swift, Server.swift","- Output directory: ...","- Diagnostics output path: <none - logs to stderr>","- Current directory: \/Users\/johny\/Documents\/swift-server-todos","- Plugin source: build","- Is dry run: false","- Additional imports: <none>","Writing data to file Server.swift...","Writing data to file Types.swift...","Writing data to file Client.swift..."],"fileType":"","syntax":"","identifier":"2-bash.1.txt","fileName":"Terminal","highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}]},"2-openapi.6.yaml":{"fileType":"yaml","highlights":[{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67}],"type":"file","content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs","paths:","  \/todos:","    get:","      summary: Fetch a list of TODOs.","      operationId: listTODOs","      tags:","        - TODOs","      responses:","        '200':","          description: Returns the list of TODOs.","          content:","            application\/json:","              schema:","                $ref: '#\/components\/schemas\/PageOfTODOs'","    post:","      summary: Create a new TODO.","      operationId: createTODO","      tags:","        - TODOs","      requestBody:","        required: true","        content:","          application\/json:","            schema:","              $ref: '#\/components\/schemas\/CreateTODORequest'","      responses:","        '201':","          description: The TODO was created successfully.","          content:","            application\/json:","              schema:","                $ref: '#\/components\/schemas\/TODODetail'","  \/todos\/{todoId}:","    parameters:","      - $ref: '#\/components\/parameters\/path.todoId'","    get:","      summary: Fetch the details of a single TODO.","      operationId: getTODODetail","      tags:","        - TODOs","      responses:","        '200':","          description: A successful response.","          content:","            application\/json:","              schema:","                $ref: \"#\/components\/schemas\/TODODetail\"","        '404':","          description: A TODO with this id was not found.","    delete:","      summary: Delete a TODO.","      operationId: deleteTODO","      tags:","        - TODOs","      responses:","        '204':","          description: Successfully deleted the TODO.","components:","  schemas:","    TODODetail:","      description: The details of a TODO.","      properties:","        id:","          description: A unique identifier of the TODO.","          type: string","          format: uuid","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - id","        - contents","    PageOfTODOs:","      description: A single page of TODOs.","      properties:","        items:","          type: array","          items:","            $ref: '#\/components\/schemas\/TODODetail'","      required:","        - items","    CreateTODORequest:","      description: The metadata required to create a TODO.","      properties:","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - contents"],"syntax":"yaml","identifier":"2-openapi.6.yaml","fileName":"openapi.yaml"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/3-database#Add-the-database-layer-to-the-routes":{"url":"\/tutorials\/gettingstartedswiftserver\/3-database#Add-the-database-layer-to-the-routes","type":"section","role":"pseudoSymbol","abstract":[{"text":"Use the Fluent ORM to connect a PostgreSQL database to the tutorial app.","type":"text"}],"kind":"section","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Add-the-database-layer-to-the-routes","title":"Add the database layer to the routes"},"2-openapi.1.yaml":{"fileName":"openapi.yaml","identifier":"2-openapi.1.yaml","fileType":"yaml","highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}],"type":"file","syntax":"yaml","content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs","components:","  schemas:","    TODODetail:","      description: The details of a TODO.","      properties:","        id:","          description: A unique identifier of the TODO.","          type: string","          format: uuid","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - id","        - contents"]},"2-apihandler.5.swift":{"fileType":"swift","syntax":"swift","content":["import Foundation","import OpenAPIRuntime","","struct APIHandler: APIProtocol {","    func listTODOs(","        _ input: Operations.ListTODOs.Input","    ) async throws -> Operations.ListTODOs.Output {","        .undocumented(statusCode: 500, .init())","    }","","    func createTODO(","        _ input: Operations.CreateTODO.Input","    ) async throws -> Operations.CreateTODO.Output {","        .undocumented(statusCode: 500, .init())","    }","","    func getTODODetail(","        _ input: Operations.GetTODODetail.Input","    ) async throws -> Operations.GetTODODetail.Output {","        .undocumented(statusCode: 500, .init())","    }","","    func deleteTODO(","        _ input: Operations.DeleteTODO.Input","    ) async throws -> Operations.DeleteTODO.Output {","        .undocumented(statusCode: 500, .init())","    }","}"],"type":"file","identifier":"2-apihandler.5.swift","fileName":"APIHandler.swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27}]},"2-apihandler.3.swift":{"fileName":"APIHandler.swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15}],"syntax":"swift","content":["import Foundation","import OpenAPIRuntime","","struct APIHandler: APIProtocol {","    func listTODOs(","        _ input: Operations.ListTODOs.Input","    ) async throws -> Operations.ListTODOs.Output {","        .undocumented(statusCode: 500, .init())","    }","","    func createTODO(","        _ input: Operations.CreateTODO.Input","    ) async throws -> Operations.CreateTODO.Output {","        .undocumented(statusCode: 500, .init())","    }","}"],"type":"file","identifier":"2-apihandler.3.swift","fileType":"swift"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/2-openapi":{"type":"topic","abstract":[{"text":"Learn how to add an OpenAPI document, generate server stubs using the OpenAPI plugin, and integrate the generated code into the app.","type":"text"}],"role":"project","url":"\/tutorials\/gettingstartedswiftserver\/2-openapi","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi","estimatedTime":"10min","title":"Specify routes using OpenAPI","kind":"project"},"doc://com.apple.ASE.getting-started/tutorials/getting-started-swift-server/Build-a-basic-Vapor-app":{"url":"\/tutorials\/getting-started-swift-server\/build-a-basic-vapor-app","type":"topic","title":"Build a basic Vapor app","kind":"article","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/Build-a-basic-Vapor-app","role":"article","abstract":[]},"2-package.1.swift":{"fileType":"swift","fileName":"Package.swift","highlights":[{"line":37},{"line":38},{"line":39}],"identifier":"2-package.1.swift","syntax":"swift","content":["\/\/ swift-tools-version: 6.1","","import PackageDescription","","let package = Package(","    name: \"swift-server-todos\",","    platforms: [","        .macOS(.v15)","    ],","    dependencies: [","        \/\/ Server scaffolding","        .package(url: \"https:\/\/github.com\/vapor\/vapor\", from: \"4.0.0\"),","        .package(url: \"https:\/\/github.com\/swift-server\/swift-service-lifecycle\", from: \"2.1.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-openapi-generator\", from: \"1.0.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-openapi-runtime\", from: \"1.0.0\"),","        .package(url: \"https:\/\/github.com\/swift-server\/swift-openapi-vapor\", from: \"1.0.0\"),","","        \/\/ Telemetry","        .package(url: \"https:\/\/github.com\/apple\/swift-log\", from: \"1.5.2\"),","","        \/\/ Database","        .package(url: \"https:\/\/github.com\/vapor\/fluent.git\", from: \"4.0.0\"),","        .package(url: \"https:\/\/github.com\/vapor\/fluent-postgres-driver.git\", from: \"2.0.0\"),","    ],","    targets: [","        .executableTarget(","            name: \"SwiftServerTodos\",","            dependencies: [","                \/\/ Server scaffolding","                .product(name: \"Vapor\", package: \"vapor\"),","                .product(name: \"ServiceLifecycle\", package: \"swift-service-lifecycle\"),","                .product(name: \"OpenAPIRuntime\", package: \"swift-openapi-runtime\"),","                .product(name: \"OpenAPIVapor\", package: \"swift-openapi-vapor\"),","","                \/\/ Telemetry","                .product(name: \"Logging\", package: \"swift-log\"),","            ],","            plugins: [","                .plugin(name: \"OpenAPIGenerator\", package: \"swift-openapi-generator\")","            ]","        )","    ]",")"],"type":"file"},"1-serverservice.0.swift":{"syntax":"swift","type":"file","fileName":"ServerService.swift","content":["import ServiceLifecycle","import Vapor","","func configureServer(_ app: Application) async throws -> ServerService {","    app.middleware.use(RequestLoggerInjectionMiddleware())","","    \/\/ A health endpoint.","    app.get(\"health\") { _ in","        \"ok\\n\"","    }","","    \/\/ A route to list TODOs.","    app.get(\"todos\") { req in","        [","            Todo(contents: \"example todo\")","        ]","    }","","    return ServerService(app: app)","}","","struct ServerService: Service {","    var app: Application","    func run() async throws {","        try await app.execute()","    }","}"],"highlights":[],"fileType":"swift","identifier":"1-serverservice.0.swift"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/3-database#Configure-the-database-tables-and-connection":{"type":"section","abstract":[{"type":"text","text":"Use the Fluent ORM to connect a PostgreSQL database to the tutorial app."}],"url":"\/tutorials\/gettingstartedswiftserver\/3-database#Configure-the-database-tables-and-connection","title":"Configure the database tables and connection","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Configure-the-database-tables-and-connection","kind":"section","role":"pseudoSymbol"},"1-serverservice.1.swift":{"fileName":"ServerService.swift","type":"file","identifier":"1-serverservice.1.swift","content":["import ServiceLifecycle","import Vapor","","func configureServer(_ app: Application) async throws -> ServerService {","    app.middleware.use(RequestLoggerInjectionMiddleware())","","    \/\/ A health endpoint.","    app.get(\"health\") { _ in","        \"ok\\n\"","    }","","    return ServerService(app: app)","}","","struct ServerService: Service {","    var app: Application","    func run() async throws {","        try await app.execute()","    }","}"],"fileType":"swift","highlights":[],"syntax":"swift"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/2-openapi#Add-an-OpenAPI-document":{"kind":"section","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/2-openapi#Add-an-OpenAPI-document","url":"\/tutorials\/gettingstartedswiftserver\/2-openapi#Add-an-OpenAPI-document","type":"section","abstract":[{"type":"text","text":"Learn how to add an OpenAPI document, generate server stubs using the OpenAPI plugin, and integrate the generated code into the app."}],"title":"Add an OpenAPI document","role":"pseudoSymbol"},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/3-database#Set-up-the-infrastructure":{"identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/3-database#Set-up-the-infrastructure","title":"Set up the infrastructure","url":"\/tutorials\/gettingstartedswiftserver\/3-database#Set-up-the-infrastructure","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Use the Fluent ORM to connect a PostgreSQL database to the tutorial app."}],"type":"section"},"2-openapi-generator-config.0.yaml":{"syntax":"yaml","type":"file","fileName":"openapi-generator-config.yaml","content":["generate:","  - types","  - server","namingStrategy: idiomatic"],"highlights":[],"fileType":"yaml","identifier":"2-openapi-generator-config.0.yaml"},"2-openapi.7.yaml":{"fileName":"openapi.yaml","fileType":"yaml","syntax":"yaml","identifier":"2-openapi.7.yaml","content":["openapi: '3.1.0'","info:","  title: SwiftServerTodos","  description: Create, read, delete, and list TODOs.","  version: 1.0.0","servers:","  - url: \/api","    description: Invoke methods on this server.","tags:","  - name: TODOs","paths:","  \/todos:","    get:","      summary: Fetch a list of TODOs.","      operationId: listTODOs","      tags:","        - TODOs","      responses:","        '200':","          description: Returns the list of TODOs.","          content:","            application\/json:","              schema:","                $ref: '#\/components\/schemas\/PageOfTODOs'","    post:","      summary: Create a new TODO.","      operationId: createTODO","      tags:","        - TODOs","      requestBody:","        required: true","        content:","          application\/json:","            schema:","              $ref: '#\/components\/schemas\/CreateTODORequest'","      responses:","        '201':","          description: The TODO was created successfully.","          content:","            application\/json:","              schema:","                $ref: '#\/components\/schemas\/TODODetail'","  \/todos\/{todoId}:","    parameters:","      - $ref: '#\/components\/parameters\/path.todoId'","    get:","      summary: Fetch the details of a single TODO.","      operationId: getTODODetail","      tags:","        - TODOs","      responses:","        '200':","          description: A successful response.","          content:","            application\/json:","              schema:","                $ref: \"#\/components\/schemas\/TODODetail\"","        '404':","          description: A TODO with this id was not found.","    delete:","      summary: Delete a TODO.","      operationId: deleteTODO","      tags:","        - TODOs","      responses:","        '204':","          description: Successfully deleted the TODO.","components:","  parameters:","    path.todoId:","      name: todoId","      in: path","      required: true","      schema:","        type: string","        format: uuid","  schemas:","    TODODetail:","      description: The details of a TODO.","      properties:","        id:","          description: A unique identifier of the TODO.","          type: string","          format: uuid","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - id","        - contents","    PageOfTODOs:","      description: A single page of TODOs.","      properties:","        items:","          type: array","          items:","            $ref: '#\/components\/schemas\/TODODetail'","      required:","        - items","    CreateTODORequest:","      description: The metadata required to create a TODO.","      properties:","        contents:","          description: The contents of the TODO.","          type: string","      required:","        - contents"],"type":"file","highlights":[{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76}]},"doc://com.apple.ASE.getting-started/tutorials/getting-started-swift-server/Review-and-next-steps":{"kind":"article","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/getting-started-swift-server\/Review-and-next-steps","role":"article","type":"topic","title":"Review and next steps","url":"\/tutorials\/getting-started-swift-server\/review-and-next-steps","abstract":[]},"doc://com.apple.ASE.getting-started/tutorials/GettingStartedSwiftServer/4-wrapup":{"estimatedTime":"5min","url":"\/tutorials\/gettingstartedswiftserver\/4-wrapup","type":"topic","role":"article","title":"Review and where to go next","abstract":[{"type":"text","text":"Review what you built and where to find resources to build something you can ship to production."}],"kind":"article","identifier":"doc:\/\/com.apple.ASE.getting-started\/tutorials\/GettingStartedSwiftServer\/4-wrapup"}}}